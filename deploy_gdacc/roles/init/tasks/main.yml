#init
#copy config file: upstart genesis gdacc
#init chain
#get enode list

- name: Stop gdacc service
  systemd:
    name: gdacc
    state: stopped

- name: Delete old chain data
  file:
    state: absent
    path: "{{datadir}}/gdacc"

- name: Rsync unit files
  synchronize: src={{git_dest}}/deploy_gdacc/config/gdacc.service dest=/lib/systemd/system/gdacc.service
  delegate_to: dev

- name: Rsync genesis files
  synchronize: src={{git_dest}}/deploy_gdacc/config/genesis.json dest=/opt/gdacc/genesis.json
  delegate_to: dev

- name: Rsync gdacc files
  synchronize: src={{git_dest}}/build/bin/gdacc dest=/opt/gdacc/bin
  delegate_to: dev

- name: Init chain data
  command: /opt/gdacc/bin/gdacc --datadir "{{ datadir }}" init "{{ genesis_path }}"  

- name: Start gdacc service
  systemd:
    name: gdacc
    daemon_reload: yes
    state: started

- name: Clear file
  shell: true > ./temp/static-nodes.txt
  run_once: true
  delegate_to: localhost

- name: Get enode
  command: /opt/gdacc/bin/gdacc attach http://127.0.0.1:"{{ rpc_port }}" --exec "admin.nodeInfo.enode"
  register: enode

# - debug: msg="{{enode.stdout}} {{ansible_default_ipv4.address}}"   

- name: Print enode
  shell: echo "{{enode.stdout}} {{ansible_default_ipv4.address}}" >> ./temp/static-nodes.txt
  delegate_to: localhost

- name: Parse enode
  shell: python ./script/parsenode.py 
  run_once: true
  delegate_to: localhost   

- name: Copy static nodes file to nodes
  copy:
    src: ./config/static-nodes.json
    dest: /opt/gdacc/data/gdacc/static-nodes.json
    owner: root
    group: root
    mode: 0644

- name: Copy account key file to nodes
  copy:
    src: ./keys/{{initkey}}
    dest: /opt/gdacc/data/keystore/
    owner: root
    group: root
    mode: 0644

- name: Stop gdacc service
  systemd:
    name: gdacc
    state: stopped

- name: Start gdacc service
  systemd:
    name: gdacc
    daemon_reload: yes
    state: started





















